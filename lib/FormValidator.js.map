{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap bb5b25ef12b8a6d63767","webpack:///./src/validations.js","webpack:///./src/inputTypes.js","webpack:///./src/index.js","webpack:///./src/form.js","webpack:///./src/formfield.js"],"names":["regexMatchCounter","input","regex","globalRegex","RegExp","matches","match","length","defaultRegexCountValidation","params","matchCount","count","min","max","undefined","Validation","repr","validate","Error","Validations","new","name","hasParam","newValidation","Object","assign","CHARACTERS","value","DATE_BETWEEN","date","Date","EMAIL","test","EMPTY","LETTERS","LOWERCASES","MATCH","NOT_EMPTY","NUMBERS","SPECIAL_CHARACTERS","UPPERCASES","VALUE_IN","getDefaultTextAreaValidations","$element","validations","required","maxLength","push","getDefaultTextValidations","pattern","getDefaultNumberValidations","getDefaultDateValidations","getDefaultFileValidations","DATE","changeProperty","defaultValidations","DATETIME","$el","FILE","changePrperty","NONE","NUMBER","PASSWORD","POSITIVE_NUMBER","RANGE","SEARCH","TEL","TEXT","TEXTAREA","TIME","URL","Validator","options","defaults","forms","fields","style","initForms","initFields","init","validClass","invalidClass","Array","isArray","initForm","map","form","initFormField","field","forEach","create","Form","parent","submit","onValidityChange","$form","document","HTMLFormElement","$submit","initSubmit","valid","formProps","HTMLElement","querySelector","elements","HTMLButtonElement","HTMLInputElement","type","controlled","of","filter","el","HTMLTextAreaElement","updateValidity","reduce","formValid","disabled","FormField","onInit","onChange","$input","initType","typeAttr","getAttribute","attrToType","upperType","toUpperCase","inputType","addEventListener","handleChange","properties","applyClasses","event","removeClasses","valids","invalids","isValid","classList","remove","add"],"mappings":"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","file":"FormValidator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FormValidator\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FormValidator\"] = factory();\n\telse\n\t\troot[\"FormValidator\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bb5b25ef12b8a6d63767","function regexMatchCounter(input, regex) {\n  const globalRegex = new RegExp(regex, 'g');\n  const matches = input.match(globalRegex);\n\n  return matches === null ? 0 : matches.length;\n}\n\nfunction defaultRegexCountValidation(input, params, regex) {\n  const matchCount = regexMatchCounter(input, regex);\n  const { count, min, max } = params;\n\n  if (count !== undefined) {\n    return matchCount === count;\n  }\n  return (min === undefined || min <= matchCount) && (max === undefined || matchCount <= max);\n}\n\nclass Validation {\n  constructor(repr, validate) {\n    if (typeof validate !== 'function') {\n      throw new Error('Invalid argument: \\'validate\\' must be a function');\n    }\n\n    this.repr = repr;\n    this.validate = validate;\n  }\n}\n\nconst Validations = {\n  new: (name, validate, hasParam = true) => {\n    if (name === 'new') {\n      throw new Error('Invalid argument: name can\\'t be \\'new\\'');\n    }\n\n    const newValidation = hasParam\n      ? {\n        [name]: (params, repr) => new Validation(\n          repr || name,\n          validate(params),\n        ),\n      }\n      : {\n        [name]: repr => new Validation(\n          repr || name,\n          validate,\n        ),\n      };\n\n    Object.assign(\n      Validations,\n      newValidation,\n    );\n  },\n  CHARACTERS: ({ count, min, max }, repr) => new Validation(\n    repr || 'CHARACTERS',\n    value => (\n      count !== undefined\n        ? value.length === count\n        : (min === undefined || value.length >= min) && (max === undefined || value.length <= max)\n    ),\n  ),\n  DATE_BETWEEN: ({ min, max }, repr) => new Validation(\n    repr || 'DATE_BETWEEN',\n    (value) => {\n      const date = new Date(value);\n      return (min === undefined || min < date) && (max === undefined || date < max);\n    },\n  ),\n  EMAIL: repr => new Validation(\n    repr || 'EMAIL',\n    value => /\\S+@\\S+\\.\\S+/.test(value),\n  ),\n  EMPTY: repr => new Validation(\n    repr || 'EMPTY',\n    value => !value.length,\n  ),\n  LETTERS: (params, repr) => new Validation(\n    repr || 'LETTERS',\n    value => defaultRegexCountValidation(value, params, /[A-Za-z]/),\n  ),\n  LOWERCASES: (params, repr) => new Validation(\n    repr || 'LOWERCASES',\n    value => defaultRegexCountValidation(value, params, /[a-z]/),\n  ),\n  MATCH: ({ regex }, repr) => new Validation(\n    repr || 'MATCH',\n    value => new RegExp(regex, '').test(value),\n  ),\n  NOT_EMPTY: repr => new Validation(\n    repr || 'NOT_EMPTY',\n    value => !!value.length,\n  ),\n  NUMBERS: (params, repr) => new Validation(\n    repr || 'NUMBERS',\n    value => defaultRegexCountValidation(value, params, /\\d/),\n  ),\n  SPECIAL_CHARACTERS: (params, repr) => new Validation(\n    repr || 'SPECIAL_CHARACTERS',\n    value => defaultRegexCountValidation(value, params, /[^A-Za-z0-9]/),\n  ),\n  UPPERCASES: (params, repr) => new Validation(\n    repr || 'UPPERCASES',\n    value => defaultRegexCountValidation(value, params, /[A-Z]/),\n  ),\n  VALUE_IN: ({ min, max }, repr) => new Validation(\n    repr || 'VALUE_IN',\n    value => (min === undefined || +value >= min) && (max === undefined || +value <= max),\n  ),\n};\n\nexport {\n  Validations,\n  Validation,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/validations.js","import { Validations as V } from './validations';\n\nfunction getDefaultTextAreaValidations($element) {\n  const validations = [];\n  const {\n    required,\n    maxLength,\n  } = $element;\n\n  if (required) {\n    validations.push(V.NOT_EMPTY());\n  }\n\n  if (maxLength >= 0) {\n    validations.push(V.CHARACTERS({ max: maxLength }));\n  }\n\n  return validations;\n}\n\nfunction getDefaultTextValidations($element) {\n  const validations = [];\n  const {\n    required,\n    maxLength,\n    pattern,\n  } = $element;\n\n  if (required) {\n    validations.push(V.NOT_EMPTY());\n  }\n\n  if (maxLength >= 0) {\n    validations.push(V.CHARACTERS({ max: maxLength }));\n  }\n\n  if (pattern) {\n    validations.push(V.MATCH({ regex: pattern }));\n  }\n\n  return validations;\n}\n\nfunction getDefaultNumberValidations($element) {\n  const validations = [];\n  const {\n    required,\n    min,\n    max,\n  } = $element;\n\n  if (required) {\n    validations.push(V.NOT_EMPTY());\n  }\n\n  if (min !== '' || max !== '') {\n    validations.push(V.VALUE_IN({ min, max }));\n  }\n\n  return validations;\n}\n\nfunction getDefaultDateValidations($element) {\n  const validations = [];\n  const {\n    required,\n    min,\n    max,\n  } = $element;\n\n  if (required) {\n    validations.push(V.NOT_EMPTY());\n  }\n\n  if (min || max) {\n    validations.push(V.DATE_BETWEEN({\n      min: min ? new Date(min) : undefined,\n      max: max ? new Date(max) : undefined,\n    }));\n  }\n\n  return validations;\n}\n\nfunction getDefaultFileValidations() {\n  throw new Error('Invalid type: File inputs aren\\'t handled by the library');\n}\n\nexport default {\n  DATE: {\n    changeProperty: 'change',\n    defaultValidations: getDefaultDateValidations,\n  },\n  DATETIME: {\n    changeProperty: 'change',\n    defaultValidations: getDefaultDateValidations,\n  },\n  EMAIL: {\n    changeProperty: 'input',\n    defaultValidations: $el => ([\n      V.EMAIL(),\n      ...getDefaultTextValidations($el),\n    ]),\n  },\n  EMPTY: {\n    changeProperty: 'input',\n    defaultValidations: () => ([V.EMPTY()]),\n  },\n  FILE: {\n    changePrperty: 'input',\n    defaultValidations: getDefaultFileValidations,\n  },\n  NONE: {},\n  NUMBER: {\n    changeProperty: 'input',\n    defaultValidations: getDefaultNumberValidations,\n  },\n  PASSWORD: {\n    changeProperty: 'input',\n    defaultValidations: getDefaultTextValidations,\n  },\n  POSITIVE_NUMBER: {\n    changeProperty: 'input',\n    defaultValidations: $el => ([\n      V.VALUE_IN({ min: 0 }),\n      ...getDefaultNumberValidations($el),\n    ]),\n  },\n  RANGE: {\n    changeProperty: 'input',\n    defaultValidations: getDefaultNumberValidations,\n  },\n  SEARCH: {\n    changeProperty: 'input',\n    defaultValidations: getDefaultTextValidations,\n  },\n  TEL: {\n    changeProperty: 'input',\n    defaultValidations: getDefaultTextValidations,\n  },\n  TEXT: {\n    changeProperty: 'input',\n    defaultValidations: getDefaultTextValidations,\n  },\n  TEXTAREA: {\n    changeProperty: 'input',\n    defaultValidations: getDefaultTextAreaValidations,\n  },\n  TIME: {\n    changeProperty: 'change',\n    defaultValidations: getDefaultDateValidations,\n  },\n  URL: {\n    changeProperty: 'input',\n    defaultValidations: getDefaultTextValidations,\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/inputTypes.js","import { Validations } from './validations';\nimport FormField from './formfield';\nimport Form from './form';\nimport InputTypes from './inputTypes';\n\n/**\n * Validator\n * @class\n */\nclass Validator {\n  static defaults = {\n    forms: [],\n    fields: [],\n    style: {\n      validClass: 'valid',\n      invalidClass: 'valid',\n    },\n  }\n\n  /**\n   * Initialize the form validator.\n   * @param {Object} options\n   */\n  constructor(options) {\n    const {\n      forms,\n      fields,\n      style,\n    } = Object.assign({}, Validator.defaults, options);\n\n    if (!forms && !fields) {\n      throw new Error('Invalid paramters: No forms nor fields defined');\n    }\n\n    /**\n     * General style for the children of the form validator.\n     *\n     * @member Validator#style\n     * @prop {String} validClass\n     * @prop {String} invalidClass\n     */\n    this.style = style;\n\n    /**\n     * Forms controlled by the validator.\n     *\n     * @member Validator#forms\n     * @type {Array.<Form>}\n     */\n    this.forms = this.initForms(forms);\n\n    /**\n     * Input fields controlled by the validator.\n     *\n     * @member Validator#fields\n     * @type {Array.<FormField>}\n     */\n    this.fields = this.initFields(fields);\n\n    this.init();\n  }\n\n  initForms = (forms) => {\n    // If there's one unique form\n    if (!Array.isArray(forms)) {\n      return [\n        Form.initForm(this, forms),\n      ];\n    }\n\n    return forms.map(form => Form.initForm(this, form));\n  }\n\n  initFields = (fields) => {\n    // If there's one unique field\n    if (!Array.isArray(fields)) {\n      return [\n        FormField.initFormField(this, fields),\n      ];\n    }\n\n    return fields.map(field => FormField.initFormField(this, field));\n  }\n\n  init = () => {\n    const { forms, fields } = this;\n\n    forms.forEach(form => form.init());\n    fields.forEach(field => field.init());\n  }\n}\n\nfunction create(options) {\n  return new Validator(options);\n}\n\nexport {\n  create,\n  Validations,\n  InputTypes,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import FormField from './formfield';\n\n/**\n * Representation of a controlled form element.\n * @class\n */\nclass Form {\n  static defaults = {\n    $el: null,\n    name: null,\n    fields: [],\n    submit: null,\n    style: {},\n    onValidityChange: null,\n  }\n\n  /**\n   * Creates a form instance.\n   *\n   * @param {FormValidator} parent\n   * @param {Object} options\n   */\n  constructor(parent, options) {\n    const {\n      $el,\n      name,\n      fields,\n      submit,\n      style,\n      onValidityChange,\n    } = Object.assign({}, Form.defaults, options);\n\n    const $form = $el || document.forms[name];\n    if (!$form || !($form instanceof HTMLFormElement)) {\n      throw new Error('Parameter error: $el must be an HTMLFormElement');\n    }\n\n    /**\n     * The form element.\n     *\n     * @member Form#$form\n     * @type {HTMLFormElement}\n     */\n    this.$form = $form;\n\n    /**\n     * The FormValidator containing this form.\n     *\n     * @member Form#parent\n     * @type {FormValidator}\n     */\n    this.parent = parent;\n\n    /**\n     * The submit button of the form.\n     * It is enabled when all the fields are valid.\n     *\n     * @member Form#$submit\n     * @type {HTMLButtonElement|HTMLInputElement}\n     */\n    this.$submit = this.initSubmit(submit);\n\n    /**\n     * Style specific to the form and its fields.\n     *\n     * @member Form#style\n     * @prop {String} validClass\n     * @prop {String} invalidClass\n     */\n    this.style = Object.assign({}, parent.style, style);\n\n    /**\n     * The fields that are controlled in this form.\n     *\n     * @member Form#fields\n     * @type {Array.<FormField>}\n     */\n    this.fields = this.initFields(fields);\n\n    /**\n     * Function called when validity of the form changes.\n     *\n     * @member Form#onValidityChange\n     * @type {Function}\n     */\n    this.onValidityChange = onValidityChange;\n\n    /**\n     * The validity of the form.\n     *\n     * @member Form#valid\n     * @type {Boolean}\n     */\n    this.valid = undefined;\n  }\n\n  initSubmit = (submit) => {\n    if (submit === true) {\n      return this.$form.querySelector('[type=submit]');\n    }\n\n    if (typeof submit === 'string' || typeof submit === 'number') {\n      return this.$form.elements[submit];\n    }\n\n    if (submit instanceof HTMLButtonElement || submit instanceof HTMLInputElement) {\n      if (submit.type !== 'submit') {\n        throw new Error('Parameter error: Submit button or input must be of type \\'submit\\'');\n      }\n\n      if (submit.form !== this.$form) {\n        throw new Error('Parameter error: Submit button or input must be part of the form it\\'s associated to');\n      }\n\n      return submit;\n    }\n\n    return null;\n  }\n\n  initFields = (fields) => {\n    // If fields isn't defined, get all fields of the form\n    const controlled = fields.length\n      ? fields\n      : Array.of(...this.$form.elements).filter(el =>\n        el instanceof HTMLInputElement || el instanceof HTMLTextAreaElement);\n\n    // If there's one unique field\n    if (!Array.isArray(controlled)) {\n      return [\n        FormField.initFormField(this, controlled),\n      ];\n    }\n\n    return controlled.map(field => FormField.initFormField(this, field));\n  }\n\n  init = () => {\n    const { fields } = this;\n\n    fields.forEach(field => field.init());\n\n    this.updateValidity();\n  }\n\n  updateValidity = () => {\n    const { fields, $submit } = this;\n\n    const valid = fields.reduce((formValid, field) =>\n      formValid && field.valid, true);\n\n    if (this.valid !== valid) {\n      this.valid = valid;\n\n      if ($submit) {\n        $submit.disabled = !valid;\n      }\n\n      if (this.onValidityChange) {\n        this.onValidityChange(valid);\n      }\n    }\n  }\n\n  static initForm = (parent, formProps) => {\n    if (typeof formProps === 'string' || typeof form === 'number') {\n      return new Form(parent, { name: formProps });\n    }\n\n    if (formProps instanceof HTMLElement) {\n      return new Form(parent, { $el: formProps });\n    }\n\n    return new Form(parent, formProps);\n  }\n}\n\nexport default Form;\n\n\n\n// WEBPACK FOOTER //\n// ./src/form.js","import InputTypes from './inputTypes';\n\n/**\n * Representation of a controlled input element.\n * @class\n */\nclass FormField {\n  static defaults = {\n    $el: null,\n    name: null,\n    type: null,\n    validations: [],\n    style: {},\n    onInit: null,\n    onChange: null,\n  }\n\n  /**\n   * Creates a FormField instance.\n   *\n   * @param {FormValidator|Form} parent\n   * @param {Object} options\n   */\n  constructor(parent, options) {\n    const {\n      $el,\n      name,\n      type,\n      validations,\n      style,\n      onInit,\n      onChange,\n    } = Object.assign({}, FormField.defaults, options);\n\n    const $input = $el || parent.$form?.elements[name];\n\n    if (!$input || !($input instanceof HTMLInputElement || $input instanceof HTMLTextAreaElement)) {\n      throw new Error('Parameter error: $el must be an input field or a textarea');\n    }\n\n    /**\n     * The HTML <input> or <textarea> element.\n     *\n     * @member FormField#$input\n     * @type {HTMLInputElement|HTMLTextareaElement}\n     */\n    this.$input = $input;\n\n    /**\n     * The form containing this input field.\n     *\n     * @member FormField#parent\n     * @type {FormValidator|Form}\n     */\n    this.parent = parent;\n\n    /**\n     * The type of the input field.\n     *\n     * @member FormField#type\n     * @type {InputType}\n     */\n    this.type = this.initType(type);\n\n    const defaultValidations = this.type.defaultValidations($input);\n\n    /**\n     * Validations for the input.\n     *\n     * @member FormField#validations\n     * @type {Array.<function>}\n     */\n    this.validations = Object.assign(defaultValidations, validations);\n\n    /**\n     * Specific style for the input.\n     *\n     * @member FormField#style\n     * @prop {String} validClass\n     * @prop {String} invalidClass\n     */\n    this.style = Object.assign({}, parent.style, style);\n\n    /**\n     * Callback on input initialization.\n     * Return <code>false</code> if you don't want validity classes to be applied.\n     *\n     * @member FormField#onInit\n     * @type {Function}\n     */\n    this.onInit = onInit;\n\n    /**\n     * Callback on input value change.\n     * Return <code>false</code> if you don't want validity classes to be applied.\n     *\n     * @member FormField#onChange\n     * @type {Function}\n     */\n    this.onChange = onChange;\n\n    /**\n     * The validity state of the input.\n     *\n     * @member FormField#valid\n     * @type {Boolean}\n     */\n    this.valid = false;\n  }\n\n  /**\n   * Computes the type of an Input.\n   *\n   * @param  {InputType} type The property provided by the user\n   * @return {InputType} The definitive type\n   */\n  initType(type) {\n    if (!type) {\n      const { $input } = this;\n\n      if ($input instanceof HTMLTextAreaElement) {\n        return InputTypes.TEXTAREA;\n      }\n\n      const typeAttr = $input.getAttribute('type');\n      return typeAttr ? FormField.attrToType(typeAttr) : InputTypes.NONE;\n    }\n\n    return type;\n  }\n\n  /**\n   * Initializes the input.\n   * Creates the event listeners,\n   * checks validity of the field value\n   * and calls the `onInit` custom function.\n   */\n  init = () => {\n    const { $input, onInit } = this;\n    const { changeProperty } = this.type;\n\n    if (changeProperty) {\n      $input.addEventListener(changeProperty, this.handleChange);\n      $input.addEventListener('blur', this.handleChange);\n    }\n\n    const properties = this.updateValidity();\n\n    if ((onInit && onInit !== false && onInit($input.value, properties) !== false)\n      || $input.value) {\n      this.applyClasses();\n    }\n  }\n\n  /**\n   * Handle a change in the value of the field.\n   *\n   * @param  {Event} event The event that occured\n   */\n  handleChange = (event) => {\n    const {\n      $input,\n      onChange,\n    } = this;\n\n    const properties = this.updateValidity();\n\n    if (onChange) {\n      if (onChange(event, $input.value, properties) !== false) {\n        this.applyClasses();\n      } else {\n        this.removeClasses();\n      }\n    } else if (onChange !== false) {\n      this.applyClasses();\n    }\n  }\n\n  /**\n   * Checks if the field is valid.\n   * If necessary, updates the state of the field\n   * and calls the form's `updateValidity` method.\n   *\n   * @return {Object} The properties of validity.\n   */\n  updateValidity = () => {\n    const { parent, $input, validations } = this;\n\n    const valids = [];\n    const invalids = [];\n\n    const { value } = $input;\n\n    validations.forEach(({ validate, repr }) => {\n      if (validate(value)) {\n        valids.push(repr);\n      } else {\n        invalids.push(repr);\n      }\n    });\n\n    const isValid = !invalids.length;\n    if (this.valid !== isValid) {\n      this.valid = isValid;\n      parent.updateValidity?.();\n    }\n\n    return {\n      isValid,\n      valids,\n      invalids,\n    };\n  }\n\n  /**\n   * Apply the right validity classes to the element.\n   */\n  applyClasses = () => {\n    const {\n      $input,\n      valid,\n      style: { validClass, invalidClass },\n    } = this;\n\n    if (valid) {\n      $input.classList.remove(invalidClass);\n      $input.classList.add(validClass);\n    } else {\n      $input.classList.remove(validClass);\n      $input.classList.add(invalidClass);\n    }\n  }\n\n  /**\n   * Remove the validity classes from the element.\n   */\n  removeClasses = () => {\n    const {\n      $input,\n      style: { validClass, invalidClass },\n    } = this;\n\n    $input.classList.remove(validClass);\n    $input.classList.remove(invalidClass);\n  }\n\n  /**\n   * Return the internal representation of a type of input.\n   *\n   * @param {String} type A value of the type attribute\n   * @return {Object}\n   */\n  static attrToType(type) {\n    const upperType = type.toUpperCase();\n\n    if (upperType === 'DATETIME-LOCAL') {\n      return InputTypes.DATETIME;\n    }\n\n    const inputType = InputTypes[upperType];\n    if (!inputType) {\n      return InputTypes.NONE;\n    }\n\n    return inputType;\n  }\n\n  static initFormField = (parent, field) => {\n    if (typeof field === 'string') {\n      return new FormField(parent, { name: field });\n    }\n\n    if (field instanceof HTMLElement) {\n      return new FormField(parent, { $el: field });\n    }\n\n    return new FormField(parent, field);\n  }\n}\n\nexport default FormField;\n\n\n\n// WEBPACK FOOTER //\n// ./src/formfield.js"],"sourceRoot":""}